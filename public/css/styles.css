@import url(https://fonts.googleapis.com/css?family=Open+Sans:700,300);
.mic__head::after {
  content: "";
  display: inline-block;
}
*{
    color: #E0E0E0;
    font-family: 'DarkerGrotesque-Medium';

}
@font-face {
    font-family: 'DarkerGrotesque-ExtraBold';
    src: url('/fonts/DarkerGrotesque-ExtraBold.ttf') format('truetype');        
}
@font-face {
    font-family: 'DarkerGrotesque-Light';
    src: url('/fonts/DarkerGrotesque-Light.ttf') format('truetype');        
}
@font-face {
    font-family: 'DarkerGrotesque-Medium';
    src: url('/fonts/DarkerGrotesque-Medium.ttf') format('truetype');        
}

.toggle-label, .round, .recording, .mic__head::after, .mic, svg {
  position: absolute;
  top: 50%;
  left: 50%;
}
header {
    width: 100%;
    position: fixed;
    top: 0;
    left: 0;
    color: #fff;
    padding: 10px 0;
    text-align: center;
    z-index: 1000; /* Ensure the header stays above other content */
}

main {
    flex: 1;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding-top: 60px; /* Adjust this value to match the height of your fixed header */
}

/* Add this to ensure that the .container is centered within main, 
   which is already flex-centered due to .container-parent */
.container {
    width: 100%;
    max-width: 400px; /* Or whatever width you prefer */
    margin: 0 auto;
    text-align: center; /* Center the text for smaller screens or narrower containers */
}

/* This ensures that the footer is pushed to the bottom of the page */
footer {
    position: fixed;
    bottom: 0;
    width: 100%;
    font-size: 0.9rem;
    text-align: center;
    padding: 10px 0;
    color: #f1f1f1;
}

.footer-content p {
    margin: 5px 0;
}

.footer-content a {
    color: #4fa8f6;
    text-decoration: none;
}

.footer-content a:hover {
    text-decoration: underline;
}


/* Adjust the body's padding to avoid content being hidden behind fixed header/footer */
body {
    padding-top: 60px; /* Height of the header */
    padding-bottom: 40px; /* Height of the footer */
    margin: 0;
    background-image: url("/css/bggg.jpg");
}

input {
  display: none;
}

svg {
  width: 130px;
  height: 130px;
  margin-top: -65px;
  margin-left: -65px;
}
svg .circle-svg {
  stroke: #ffffff;
  stroke-width: 3;
  fill: transparent;
}

.mic {
  width: 85px;
  height: 85px;
  margin-top: -42.5px;
  margin-left: -42.5px;
  display: flex;
  flex-direction: column;
  align-items: center;
  transition: all 0.3s ease;
}
.mic__head {
  background: linear-gradient(45deg, #E0E0E0 50%, white 50%);
  width: 25.5px;
  width: 30px;
  height: 63.75px;
  border-radius: 30px;
}
.mic__head::after {
  top: 10%;
  background: linear-gradient(45deg, #ffaa00 50%, #f0e662 90%);
  width: 8px;
  height: 20px;
  border-radius: inherit;
  transform: translate(-50%);
}
.mic__neck {
  background: linear-gradient(45deg, #E0E0E0 50%, white 50%);
  width: 4.25px;
  height: 17px;
}
.mic__leg {
  background: linear-gradient(45deg, #E0E0E0 50%, white 50%);
  width: 25.5px;
  height: 4.25px;
  border-radius: 50px;
}

.recording {
  width: 85px;
  height: 85px;
  margin-top: -42.5px;
  margin-left: -42.5px;
  transform: scale(0.5);
  opacity: 0;
  transition: all 0.3s 0s ease;
}

.round {
  background: white;
  width: 12.75px;
  height: 12.75px;
  border-radius: 50%;
  margin-top: -6.375px;
  margin-left: -6.375px;
  animation: recording 1s ease-in-out infinite;
  box-shadow: 5px 5px 5px 0px rgba(0, 0, 0, 0.15);
}
.round:first-child {
  left: 20%;
}
.round:nth-child(2) {
  animation-delay: 0.15s;
}
.round:last-child {
  left: 80%;
  animation-delay: 0.3s;
}

.toggle-label {
  display: inline-block;
  width: 130px;
  height: 130px;
  margin-top: -65px;
  margin-left: -65px;
  cursor: pointer;
}

#record-toggle:checked ~ svg {
  animation: spinning 3s ease-in-out infinite alternate;
}
#record-toggle:checked ~ svg .circle-svg {
  stroke-dasharray: 300;
  stroke-dashoffset: 300;
  animation: dash 3s ease-in-out infinite alternate;
}
#record-toggle:checked ~ .mic {
  transform: scale(1.128);
  animation: gone 0.5s 0.3s ease;
  animation-fill-mode: forwards;
}
#record-toggle:checked ~ .recording {
  opacity: 1;
  transform: scale(0.98);
  transition-delay: 0.3s;
}

@keyframes spinning {
  to {
    transform: rotatez(360deg);
  }
}
@keyframes gone {
  to {
    transform: scale(0.5);
    opacity: 0;
  }
}
@keyframes recording {
  0% {
    transform: translatey(0%);
  }
  30% {
    transform: translatey(-30%);
  }
  60% {
    transform: translatey(30%);
  }
  90% {
    transform: translatey(0%);
  }
}
@keyframes dash {
  from {
    stroke-dashoffset: 300;
  }
  to {
    stroke-dashoffset: 0;
  }
}

.info-block {
    position: relative; /* Sets the positioning context for absolute children */
    width: 300px;
    height: 60px; /* Adjust as needed */
    margin-bottom: 10px; /* Spacing between blocks */
}

/* Background image styling */
.info-background img {
    width: 100%;
    height: 100%;
    display: block; /* Ensures the image takes up the full size of .info-background */
}

/* Text styling inside info blocks */
.info-text {
    position: absolute; /* Positions the text block absolutely within .info-block */
    top: -12px;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center; /* Aligns items vertically center */
    overflow: hidden; /* Prevents content from overflowing */
    font-family: 'DarkerGrotesque-ExtraBold';
    
}
.info-label {
    white-space: nowrap; /* Prevents the label from wrapping */
    padding-left: 10px;
    /* Add more styling as needed */
}
.info-label,
.info-data {
    font-weight: bold;
    font-size: 20px;
    text-align: center;
    color: #fff; /* Adjust color */
    margin: 0 5px; /* Adds spacing between label and data, adjust as needed */
    font-family: 'DarkerGrotesque-Light';}